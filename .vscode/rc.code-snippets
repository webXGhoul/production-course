{
	// Place your production_project_code_source-master workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Create rc component": {
		"scope": "javascript,typescript, reacttypescript, typescriptreact",
		"prefix": "rc",
		"body": [
			"import { FC } from \"react\";",
			"import { classNames } from \"shared/lib/classNames/classNames\";",
			"import styles from \"./${TM_FILENAME_BASE}.module.scss\";",
			"",
			"interface ${TM_FILENAME_BASE}Props {",
			"  className?: string;",
			"}",
			"",
			"export const ${TM_FILENAME_BASE}: FC<${TM_FILENAME_BASE}Props> = ({ className }) => {",
			"  return (",
			"    <div className={classNames(styles.${TM_FILENAME_BASE}, {}, [className])}>",
			"    </div>",
			"  );",
			"};"
		],
		"description": "aslkfasf"
	},
	"Create useState": {
		"scope": "typescript, reacttypescript, typescriptreact",
		"prefix": "sta",
		"body": "const [$1, set$1] = useState($2);"
	},
	"Create useDipatch": {
		"scope": "typescript, reacttypescript, typescriptreact",
		"prefix": "dispatch",
		"body": "const dispatch = useDispatch();"
	}
}
// npm install --save-dev chromatic
// npx chromatic --project-token=chpt_40bc6addd2ae43f